[{"D:\\assignment\\react-app\\src\\index.js":"1","D:\\assignment\\react-app\\src\\App.js":"2","D:\\assignment\\react-app\\src\\reportWebVitals.js":"3","D:\\assignment\\react-app\\src\\components\\content\\Content.js":"4","D:\\assignment\\react-app\\src\\components\\content\\Editor.js":"5","D:\\assignment\\react-app\\src\\components\\navbar\\Navbar.js":"6","D:\\assignment\\react-app\\src\\reducers\\combined.js":"7","D:\\assignment\\react-app\\src\\components\\content\\Chatbox.js":"8","D:\\assignment\\react-app\\src\\actions\\actions.js":"9","D:\\assignment\\react-app\\src\\components\\content\\Loading.js":"10"},{"size":891,"mtime":1612008229555,"results":"11","hashOfConfig":"12"},{"size":316,"mtime":1611828858358,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"12"},{"size":846,"mtime":1611920116914,"results":"15","hashOfConfig":"12"},{"size":3264,"mtime":1612008156067,"results":"16","hashOfConfig":"12"},{"size":1110,"mtime":1611739683805,"results":"17","hashOfConfig":"12"},{"size":3385,"mtime":1612010808788,"results":"18","hashOfConfig":"12"},{"size":4439,"mtime":1612099089811,"results":"19","hashOfConfig":"12"},{"size":773,"mtime":1612009938016,"results":"20","hashOfConfig":"12"},{"size":376,"mtime":1612099172685,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"6sh0yv",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"D:\\assignment\\react-app\\src\\index.js",[],["45","46"],"D:\\assignment\\react-app\\src\\App.js",[],"D:\\assignment\\react-app\\src\\reportWebVitals.js",[],"D:\\assignment\\react-app\\src\\components\\content\\Content.js",[],"D:\\assignment\\react-app\\src\\components\\content\\Editor.js",["47"],"import React, { useRef } from 'react' ;\r\nimport Editor from '@monaco-editor/react' ;\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { XCircle, PlusCircle, ArrowRepeat} from 'react-bootstrap-icons' ;\r\nimport { changeTab, modifyTab, removeTab, addTab } from '../../actions/actions';\r\n\r\nfunction EditorComponent(){\r\n    const editorRef = useRef(null) ;\r\n    \r\n    const { currentTab, tabNumCount, tabs  } = useSelector(state => state.tabState) ;\r\n    const dispatch = useDispatch() ;\r\n\r\n    // functions\r\n    const onChange = (newCode, e) => {\r\n        dispatch(modifyTab({\r\n            id: currentTab.id,\r\n            code: newCode\r\n        }));\r\n    } ;\r\n\r\n    const editorDidMount = (editor, monaco) => {\r\n        editor.focus() ;\r\n        editorRef.current = editor ;\r\n    }\r\n\r\n    const switchTab = (tabId) => {\r\n        dispatch(changeTab(tabId)) ;\r\n        editorRef.current.focus() ;\r\n    }\r\n\r\n    const closeTab = (tab_num) => {\r\n        dispatch(removeTab(tab_num)) ;\r\n    }\r\n\r\n    const addNewTab = (event) => {\r\n        dispatch(addTab({\r\n            id: `tab${tabNumCount}`,\r\n            name: `NewTab${tabNumCount}.js`,\r\n            code: '/* enter code here */'\r\n        })) ;\r\n    }\r\n\r\n    // code\r\n    const code = tabs[currentTab.index].code ;\r\n\r\n    const options = {\r\n        selectOnLineNumbers: true,\r\n        automaticLayout: true,\r\n        minimap: {\r\n            enabled: false\r\n        },\r\n        wordWrap: true,\r\n        acceptSuggestionOnEnter: true,\r\n        scrollbars: {\r\n            vertical: 'hidden',\r\n            horizontal: 'hidden'\r\n        }\r\n    } ;\r\n\r\n    return (\r\n        <>\r\n        \r\n            <div className=\"py-2 Editor-tabs-container\">\r\n                {\r\n                    tabs.map( (value, index) => {\r\n                        return (\r\n                            <div key={value.id} className=\"Editor-tab d-inline-block pb-1 px-2 mr-2\">\r\n                                <a onClick={\r\n                                    (e) => switchTab(value.id)\r\n                                }>{value.name}</a>\r\n                                <div className=\"Editor-button d-inline ml-2\">\r\n                                    {\r\n                                        index ? <button onClick={ (e) => closeTab(value.id)} className=\"Editor-tab-close\"><XCircle /></button> : '' \r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        ) ;\r\n                    })\r\n                }\r\n\r\n                <div className=\"Editor-newtab\">\r\n                    <button onClick={addNewTab} id=\"addTab\"><PlusCircle size={20} /></button>\r\n                </div>\r\n                \r\n                <div className=\"text-right apply-container\">\r\n                    <button id=\"applyChanges\" className=\"btn btn-dark\"><ArrowRepeat size={16} /> Apply Changes</button>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"editor\">\r\n                <Editor id=\"editorMain\" defaultLanguage=\"javascript\" defaultValue=\"\" value={code} theme=\"vs-dark\" options={options} onChange={onChange} onMount={editorDidMount} loading=\"Loading...\" />\r\n            </div>\r\n\r\n        </>\r\n    ) ;\r\n}\r\n\r\nexport default EditorComponent ;","D:\\assignment\\react-app\\src\\components\\navbar\\Navbar.js",[],"D:\\assignment\\react-app\\src\\reducers\\combined.js",[],"D:\\assignment\\react-app\\src\\components\\content\\Chatbox.js",[],"D:\\assignment\\react-app\\src\\actions\\actions.js",[],["48","49"],"D:\\assignment\\react-app\\src\\components\\content\\Loading.js",[],{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":68,"column":33,"nodeType":"56","endLine":70,"endColumn":35},{"ruleId":"50","replacedBy":"57"},{"ruleId":"52","replacedBy":"58"},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["59"],["60"],"no-global-assign","no-unsafe-negation"]