{"version":3,"sources":["fonts/Montserrat-Regular.ttf","fonts/Quicksand-VariableFont_wght.ttf","components/navbar/Navbar.js","components/content/Loading.js","components/content/Chatbox.js","actions/actions.js","components/content/Editor.js","components/content/Content.js","App.js","reportWebVitals.js","reducers/combined.js","index.js"],"names":["NavbarComponent","Navbar","collapseOnSelect","className","expand","variant","fixed","Brand","Toggle","aria-controls","Collapse","id","Nav","Container","Link","Image","src","rounded","Component","LoadingComponent","ChatboxComponent","chat","useSelector","state","chatState","tabs","tabState","dispatch","useDispatch","divRef","React","createRef","botResponse","code","message","botID","startIndex","indexOf","lastIndex","lastIndexOf","axios","post","getMessage","slice","then","value","type","payload","msg","data","catch","err","console","log","useEffect","current","scrollIntoView","behavior","map","val","index","alt","human","bot","isLoading","size","ref","placeholder","onKeyDown","event","currentTarget","chatID","nextId","key","EditorComponent","editorRef","useRef","currentTab","tabNumCount","onClick","e","tabId","focus","name","tab_num","defaultLanguage","defaultValue","theme","options","selectOnLineNumbers","automaticLayout","minimap","enabled","wordWrap","acceptSuggestionOnEnter","scrollbars","vertical","horizontal","onChange","newCode","onMount","editor","monaco","loading","ContentComponent","fluid","Row","Col","md","Editor","Chatbox","App","Content","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","FullTabInfo","liveTabs","allReducers","combineReducers","actions","tabCopy","Object","assign","push","length","deleteIndex","findIndex","filter","modifiedCode","chatCopy","Array","from","modifiedChat","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f3b0ed31.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Montserrat-Regular.2a2d37bf.ttf\";","export default __webpack_public_path__ + \"static/media/Quicksand-VariableFont_wght.7dd2a729.ttf\";","import React, { Component } from 'react' ;\r\nimport { Navbar, Nav, Container, Image } from 'react-bootstrap' ;\r\nimport { CaretDownFill } from 'react-bootstrap-icons' ;\r\n\r\nclass NavbarComponent extends Component{\r\n    render(){\r\n        return (\r\n            <Navbar collapseOnSelect className=\"Navbar\" expand=\"sm\" variant=\"dark\" fixed=\"top\">\r\n                <Navbar.Brand className=\"Text-Style ml-2\">AI Playground</Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"responsive-nav\" />\r\n                <Navbar.Collapse id=\"responsive-nav\">\r\n                    <Nav className=\"ml-auto Text-Style-2\">\r\n                        <Container className=\"pr-0\">\r\n                            <Nav.Link>Learn AI</Nav.Link>\r\n                            <Nav.Link>Docs</Nav.Link>\r\n                            <Nav.Link><Image src=\"/images/logo192.png\" className=\"navbar-avatar\" rounded />Account <CaretDownFill /></Nav.Link>\r\n                        </Container>\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n        ) ;\r\n    }\r\n}\r\n    \r\nexport default NavbarComponent ;","import React, { Component } from 'react' ;\r\n\r\nexport class LoadingComponent extends Component{\r\n    render(){\r\n        return (\r\n            <div className=\"loading p-2\">\r\n                <div className=\"dot dot-1\"></div>\r\n                <div className=\"ml-1 dot dot-2\"></div>\r\n                <div className=\"ml-1 dot dot-3\"></div>\r\n            </div>\r\n        ) ;\r\n    }\r\n}","import React, { useEffect } from 'react' ;\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { botConversation, chatCoversation } from '../../actions/actions' ;\r\nimport { PersonCircle } from 'react-bootstrap-icons' ;\r\nimport nextId from 'react-id-generator' ;\r\nimport axios from 'axios' ;\r\nimport { LoadingComponent } from './Loading';\r\n\r\nfunction ChatboxComponent(){\r\n    const chat = useSelector(state => state.chatState) ;\r\n    const { tabs } = useSelector(state => state.tabState) ;\r\n    const dispatch = useDispatch() ;\r\n    const divRef = React.createRef() ;\r\n\r\n    const getMessage = (code) => {\r\n        return axios.post('https://shrouded-oasis-94153.herokuapp.com/', {\r\n            code: code\r\n        })\r\n    }\r\n\r\n    const botResponse = (code, message, botID) => {\r\n        const startIndex = code.indexOf('function') ;\r\n        const lastIndex = code.lastIndexOf('}') + 1 ;\r\n        const finalcode = `(${code.slice(startIndex, lastIndex)})('${message}')` ;\r\n        getMessage(finalcode).then(value => {\r\n            dispatch(botConversation({\r\n                id: botID,\r\n                msg: value.data\r\n            })) ;\r\n        }).catch(err => {\r\n            console.log(err);\r\n        }) ;\r\n    }\r\n\r\n    useEffect(() => {\r\n        if ( divRef.current ){\r\n            divRef.current.scrollIntoView({\r\n                behavior: 'smooth'\r\n            }) ;\r\n        }\r\n    }, [divRef]) ;\r\n\r\n    const enterKeyDown = (event) => {\r\n        const msg = event.currentTarget.value ;\r\n        const message = event.currentTarget.value ;\r\n        const chatID = nextId('chatbot-id-') ;\r\n\r\n        if (event.key === 'Enter'){\r\n            dispatch(chatCoversation({\r\n                human: {\r\n                    message: msg\r\n                },\r\n                bot: {\r\n                    id: chatID,\r\n                    isLoading: true,\r\n                    message: ''\r\n                }\r\n            })) ;\r\n            event.currentTarget.value = '' ;\r\n            botResponse(tabs[0].code, message, chatID) ;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"w-100 h-100 Chatbox\">\r\n            <div className=\"Chatbox-container\">\r\n                <div className=\"Chatbox-chat-container\">\r\n                    <ul id=\"Chatbox-chat-list\" className=\"p-3 mb-0\">\r\n                        {\r\n                            chat.map( (val, index) => {\r\n                                return (\r\n                                    <li className=\"mt-3\" key={`chat-list-${index}`}>\r\n                                        <div className=\"d-flex justify-content-start align-content-center\">\r\n                                            <img src=\"/images/logo192.png\" alt=\"Avatar\" className=\"human-chat-avatar align-self-center\" />\r\n                                            <div className=\"msgbox ml-2 Text-Style-2\">\r\n                                                { val.human.message }\r\n                                            </div>\r\n                                        </div>\r\n                                        \r\n                                        <div className=\"mt-3 d-flex justify-content-end align-content-center\">\r\n                                            <div className=\"msgbox mr-2 Text-Style-2\">\r\n                                                {\r\n                                                    val.bot.isLoading ? \r\n                                                    <LoadingComponent />\r\n                                                    : val.bot.message\r\n                                                }\r\n                                            </div>\r\n\r\n                                            <div className=\"align-self-center\">\r\n                                                <PersonCircle size={25} />\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div ref={divRef}></div>\r\n                                    </li>\r\n                                )\r\n                            })\r\n                        }\r\n                    </ul>\r\n                </div>\r\n                <div className=\"Chatbox-input-container\">\r\n                    <input className=\"px-3 py-3\" type=\"text\" placeholder=\"Type message here...\" onKeyDown={enterKeyDown} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    ) ;\r\n}\r\n\r\nexport default ChatboxComponent ;","// actions for editor tabs\r\n\r\nexport function addTab(newTab){\r\n    return {\r\n        type: 'ADD',\r\n        payload: newTab\r\n    }\r\n}\r\n\r\nexport function removeTab(id){\r\n    return {\r\n        type: 'REMOVE',\r\n        payload: {\r\n            id\r\n        }\r\n    }\r\n}\r\n\r\nexport function changeTab(id){\r\n    return {\r\n        type: 'CHANGE',\r\n        payload: {\r\n            id\r\n        }\r\n    }\r\n}\r\n\r\nexport function modifyTab(tab){\r\n    return {\r\n        type: 'MODIFY',\r\n        payload: tab\r\n    }\r\n}\r\n\r\n// actions for chatbox\r\n\r\nexport function chatCoversation(chatObject){\r\n    return {\r\n        type: 'PERSON',\r\n        payload: chatObject\r\n    }\r\n}\r\n\r\nexport function botConversation(botObject){\r\n    return {\r\n        type: 'BOT',\r\n        payload: botObject\r\n    }\r\n}\r\n","import React, { useRef } from 'react' ;\r\nimport Editor from '@monaco-editor/react' ;\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { XCircle, PlusCircle, ArrowRepeat} from 'react-bootstrap-icons' ;\r\nimport { changeTab, modifyTab, removeTab, addTab } from '../../actions/actions';\r\n\r\nfunction EditorComponent(){\r\n    const editorRef = useRef(null) ;\r\n    \r\n    const { currentTab, tabNumCount, tabs  } = useSelector(state => state.tabState) ;\r\n    const dispatch = useDispatch() ;\r\n\r\n    // functions\r\n    const onChange = (newCode, e) => {\r\n        dispatch(modifyTab({\r\n            id: currentTab.id,\r\n            code: newCode\r\n        }));\r\n    } ;\r\n\r\n    const editorDidMount = (editor, monaco) => {\r\n        editor.focus() ;\r\n        editorRef.current = editor ;\r\n    }\r\n\r\n    const switchTab = (tabId) => {\r\n        dispatch(changeTab(tabId)) ;\r\n        editorRef.current.focus() ;\r\n    }\r\n\r\n    const closeTab = (tab_num) => {\r\n        dispatch(removeTab(tab_num)) ;\r\n    }\r\n\r\n    const addNewTab = (event) => {\r\n        dispatch(addTab({\r\n            id: `tab${tabNumCount}`,\r\n            name: `NewTab${tabNumCount}.js`,\r\n            code: '/* enter code here */'\r\n        })) ;\r\n    }\r\n\r\n    // code\r\n    const code = tabs[currentTab.index].code ;\r\n\r\n    const options = {\r\n        selectOnLineNumbers: true,\r\n        automaticLayout: true,\r\n        minimap: {\r\n            enabled: false\r\n        },\r\n        wordWrap: true,\r\n        acceptSuggestionOnEnter: true,\r\n        scrollbars: {\r\n            vertical: 'hidden',\r\n            horizontal: 'hidden'\r\n        }\r\n    } ;\r\n\r\n    return (\r\n        <>\r\n        \r\n            <div className=\"py-2 Editor-tabs-container\">\r\n                {\r\n                    tabs.map( (value, index) => {\r\n                        return (\r\n                            <div key={value.id} className=\"Editor-tab d-inline-block pb-1 px-2 mr-2\">\r\n                                <a onClick={\r\n                                    (e) => switchTab(value.id)\r\n                                }>{value.name}</a>\r\n                                <div className=\"Editor-button d-inline ml-2\">\r\n                                    {\r\n                                        index ? <button onClick={ (e) => closeTab(value.id)} className=\"Editor-tab-close\"><XCircle /></button> : '' \r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        ) ;\r\n                    })\r\n                }\r\n\r\n                <div className=\"Editor-newtab\">\r\n                    <button onClick={addNewTab} id=\"addTab\"><PlusCircle size={20} /></button>\r\n                </div>\r\n                \r\n                <div className=\"text-right apply-container\">\r\n                    <button id=\"applyChanges\" className=\"btn btn-dark\"><ArrowRepeat size={16} /> Apply Changes</button>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"editor\">\r\n                <Editor id=\"editorMain\" defaultLanguage=\"javascript\" defaultValue=\"\" value={code} theme=\"vs-dark\" options={options} onChange={onChange} onMount={editorDidMount} loading=\"Loading...\" />\r\n            </div>\r\n\r\n        </>\r\n    ) ;\r\n}\r\n\r\nexport default EditorComponent ;","import React, { Component } from 'react' ;\r\nimport { Col, Container, Row } from 'react-bootstrap';\r\nimport ChatboxComponent from './Chatbox';\r\nimport EditorComponent from './Editor' ;\r\n\r\nclass ContentComponent extends Component{\r\n    render(){\r\n        return (\r\n            <div className=\"Content\">\r\n                <Container fluid className=\"h-100\">\r\n                    <Row className=\"Content-row\">\r\n                        <Col md className=\"Content-col pb-3\" id=\"Content-first-col\">\r\n                            <EditorComponent />\r\n                        </Col>\r\n                        <Col className=\"Content-col\">\r\n                            <ChatboxComponent />\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        ) ;\r\n    }\r\n}\r\n\r\nexport default ContentComponent ;","import 'bootstrap/dist/css/bootstrap.min.css' ;\nimport NavbarComponent from './components/navbar/Navbar' ;\nimport ContentComponent from './components/content/Content' ;\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <NavbarComponent />\n      <ContentComponent />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from 'redux' ;\r\n\r\n// tab reducer\r\n\r\nconst tabArray = [\r\n    {\r\n        id: 'tab0',\r\n        name: 'script.js',\r\n        code: 'function name (param) {return param;}'\r\n    }\r\n] ;\r\n\r\nconst FullTabInfo = {\r\n    liveTabs: 1,\r\n    tabNumCount: 1,\r\n    currentTab: {\r\n        id: 'tab0',\r\n        index: 0\r\n    },\r\n    tabs: tabArray\r\n}\r\n\r\nconst tabReducer = (state = FullTabInfo, actions) => {\r\n    const tabCopy = Object.assign({}, state) ;\r\n    \r\n    switch(actions.type){\r\n        case 'ADD': {\r\n            tabCopy.liveTabs +=1 ;\r\n            tabCopy.tabNumCount += 1 ;\r\n            tabCopy.tabs.push(actions.payload) ;\r\n            return tabCopy ;\r\n        }\r\n        case 'REMOVE': {\r\n            if (tabCopy.tabs.length > 1){\r\n                // changing current tab values\r\n                const { liveTabs, tabs } = tabCopy ;\r\n                \r\n                // getcurrent index of tab to be deleted\r\n                const deleteIndex = tabs.findIndex( val => val.id === actions.payload.id) ;\r\n                \r\n                // if index is in between tabs array\r\n                if ( deleteIndex !== (liveTabs - 1) ){\r\n                    tabCopy.currentTab.index = deleteIndex ;\r\n                    tabCopy.currentTab.id = tabs[deleteIndex + 1].id ;\r\n                }\r\n                // if index is last tab in array\r\n                else{\r\n                    tabCopy.currentTab.index = deleteIndex - 1 ;\r\n                    tabCopy.currentTab.id = tabs[deleteIndex - 1].id ;\r\n                }\r\n                \r\n                // decreasing livetab count\r\n                tabCopy.liveTabs -= 1 ;\r\n                \r\n                // removing tab from array \r\n                tabCopy.tabs = tabCopy.tabs.filter((val) => val.id !== actions.payload.id ) ;\r\n                return tabCopy ;\r\n            }\r\n            else{\r\n                return tabCopy ;\r\n            }\r\n        }\r\n        case 'CHANGE': {\r\n            tabCopy.currentTab.id = actions.payload.id ;\r\n            tabCopy.currentTab.index = tabCopy.tabs.findIndex( val => val.id === actions.payload.id ) ; \r\n            return tabCopy ;\r\n        }\r\n        case 'MODIFY': {\r\n            const modifiedCode = tabCopy.tabs.map( val => {\r\n                if (actions.payload.id === val.id){\r\n                    val.code = actions.payload.code ;\r\n                }\r\n                return val ;\r\n            }) ;\r\n            \r\n            tabCopy.tabs = modifiedCode ;\r\n            \r\n            return tabCopy ;\r\n        }\r\n        default: return tabCopy ;\r\n    }\r\n}\r\n\r\n\r\n// chat reducer\r\n\r\nconst chatReducer = (state = [], actions) => {\r\n    const chatCopy = Array.from(state) ;\r\n\r\n    switch(actions.type){\r\n        case 'PERSON': {\r\n            chatCopy.push(actions.payload) ;\r\n            return chatCopy ;\r\n        }\r\n        case 'BOT': {\r\n            const modifiedChat = chatCopy.map( val => {\r\n                if ( val.bot.id === actions.payload.id ){\r\n                    val.bot.isLoading = false ;\r\n                    val.bot.message = actions.payload.msg ;\r\n                }\r\n\r\n                return val ;\r\n            }) ;\r\n\r\n            return modifiedChat ;\r\n        }\r\n        default: return chatCopy ;\r\n    }\r\n\r\n}\r\n\r\nconst allReducers = combineReducers({\r\n    tabState: tabReducer,\r\n    chatState: chatReducer\r\n}) ;\r\n\r\nexport default allReducers ;\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './fonts/Montserrat-Regular.ttf' ;\nimport './fonts/Quicksand-VariableFont_wght.ttf' ;\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { createStore } from 'redux' ;\nimport { Provider } from 'react-redux' ;\nimport allReducers from './reducers/combined';\n\nconst store = createStore(allReducers,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n) ;\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}